#!/bin/bash

output_dir="pokemon_data"
mkdir -p "$output_dir"

pokemons=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

fetch_pokemon() {
    local pokemon=$1
    local file="$output_dir/$pokemon.json"

    echo "Fetching data for $pokemon..."
    http_code=$(curl -s -o "$file" -w "%{http_code}" "https://pokeapi.co/api/v2/pokemon/$pokemon")

    if [ "$http_code" -eq 200 ]; then
        echo "Saved data to $file ✅"
    else
        echo "Failed to fetch $pokemon (HTTP $http_code) ❌"
        rm -f "$file"
    fi
}

# Launch background processes
for p in "${pokemons[@]}"; do
    fetch_pokemon "$p" &
done

# Show running jobs
echo "Currently running background jobs:"
jobs

# Wait for all jobs to finish
wait

# If any jobs are still hanging, kill them (safety cleanup)
if jobs %%; then
    echo "Killing any remaining background jobs..."
    jobs -p | xargs kill 2>/dev/null
fi

echo "All Pokémon fetched 🎉"
